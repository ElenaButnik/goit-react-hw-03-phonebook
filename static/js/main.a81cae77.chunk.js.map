{"version":3,"sources":["components/Forms/Form.module.css","components/Forms/Form.js","components/Contacts/ContactList.js","components/Filter/Filter.js","App.js","reportWebVitals.js","index.js","components/Contacts/ContactList.module.css","components/Filter/Filter.module.css"],"names":["module","exports","Form","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","obj","props","addNewContact","reset","prodIdName","uuidv4","prodIdNumber","this","className","s","form","onSubmit","label","htmlFor","input","id","type","pattern","title","required","onChange","button","Component","ContactList","list","contacts","map","list__item","onClick","removeContact","Filter","changeFilter","App","filter","find","contact","alert","prevState","renderContacts","toLowerCase","includes","currentTarget","elem","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2KACAA,EAAOC,QAAU,CAAC,KAAO,mBAAmB,OAAS,qBAAqB,MAAQ,oBAAoB,MAAQ,sB,uKCIjGC,EAAb,4MACEC,MAAQ,CACNC,KAAM,GACNC,OAAQ,IAHZ,EAMEC,aAAe,SAACC,GACd,MAAwBA,EAAEC,OAAlBJ,EAAR,EAAQA,KAAMK,EAAd,EAAcA,MAEd,EAAKC,SAAL,eACGN,EAAOK,KAVd,EAcEE,aAAe,SAACJ,GACdA,EAAEK,iBACF,MAAyB,EAAKT,MAExBU,EAAM,CACVT,KAHF,EAAQA,KAINC,OAJF,EAAcA,QAOd,EAAKS,MAAMC,cAAcF,GACzB,EAAKG,SAxBT,EA2BEA,MAAQ,WACN,EAAKN,SAAS,CAAEN,KAAM,GAAIC,OAAQ,MA5BtC,EA+BEY,WAAaC,cA/Bf,EAgCEC,aAAeD,cAhCjB,4CAkCE,WACE,IAAQP,EAAyDS,KAAzDT,aAAcM,EAA2CG,KAA3CH,WAAYX,EAA+Bc,KAA/Bd,aAAca,EAAiBC,KAAjBD,aAChD,EAAyBC,KAAKjB,MAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACd,OACE,8BACE,uBAAMgB,UAAWC,IAAEC,KAAMC,SAAUb,EAAnC,UACE,wBAAOU,UAAWC,IAAEG,MAAOC,QAAST,EAApC,UACG,IADH,UAIA,uBACEI,UAAWC,IAAEK,MACbC,GAAIX,EACJY,KAAK,OACLzB,KAAK,OACLK,MAAOL,EACP0B,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAU3B,IAGZ,uBAAOe,UAAWC,IAAEG,MAAOC,QAASP,EAApC,oBAGA,uBACEE,UAAWC,IAAEK,MACbC,GAAIT,EACJU,KAAK,MACLzB,KAAK,SACLK,MAAOJ,EACPyB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAU3B,IAGZ,wBAAQe,UAAWC,IAAEY,OAAQL,KAAK,SAAlC,kCAvEV,GAA0BM,a,gBCDbC,EAAb,4JACE,WAAU,IAAD,OACP,OACE,oBAAIf,UAAWC,IAAEe,KAAjB,SACGjB,KAAKN,MAAMwB,SAASC,KAAI,gBAAGX,EAAH,EAAGA,GAAIxB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACvB,qBAAIgB,UAAWC,IAAEkB,WAAjB,UACGpC,EADH,MACYC,EACV,wBACEgB,UAAWC,IAAEY,OACbO,QAAS,EAAK3B,MAAM4B,cACpBb,KAAK,SACLD,GAAIA,EAJN,sBAFgCA,YAL5C,GAAiCO,a,gBCYlBQ,EAZA,SAAC,GAAD,IAAGlC,EAAH,EAAGA,MAAOmC,EAAV,EAAUA,aAAV,OACb,qCACE,uBAAOvB,UAAWC,IAAEG,MAApB,mCACA,uBACEJ,UAAWC,IAAEK,MACbE,KAAK,OACLpB,MAAOA,EACPwB,SAAUW,QCJVC,E,4MACJ1C,MAAQ,CACNmC,SAAU,CACR,CAAEV,GAAI,OAAQxB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEuB,GAAI,OAAQxB,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEuB,GAAI,OAAQxB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEuB,GAAI,OAAQxB,KAAM,iBAAkBC,OAAQ,cAEhDyC,OAAQ,I,EAGV/B,cAAgB,YAAuB,IAApBX,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAClB,EAAKF,MAAMmC,SAASS,MAAK,SAACC,GAAD,OAAaA,EAAQ5C,OAASA,KAK1D6C,MAAM,GAAD,OAAI7C,EAAJ,4BAJL,EAAKM,UAAS,SAACwC,GAAD,MAAgB,CAC5BZ,SAAS,GAAD,mBAAMY,EAAUZ,UAAhB,CAA0B,CAAElC,OAAMC,SAAQuB,GAAIV,sB,EAO5DiC,eAAiB,WACf,MAA6B,EAAKhD,MAA1B2C,EAAR,EAAQA,OACR,OADA,EAAgBR,SACAQ,QAAO,SAACE,GAAD,OACrBA,EAAQ5C,KAAKgD,cAAcC,SAASP,EAAOM,mB,EAI/CR,aAAe,SAACrC,GACd,EAAKG,SAAS,CAAEoC,OAAQvC,EAAE+C,cAAc7C,S,EAG1CiC,cAAgB,SAACnC,GACf,EAAKG,UAAS,SAACwC,GAAD,MAAgB,CAC5BZ,SAAUY,EAAUZ,SAASQ,QAAO,SAACS,GAAD,OAAUA,EAAK3B,KAAOrB,EAAEC,OAAOoB,W,uDAIvE,WACE,IAAMU,EAAWkB,aAAaC,QAAQ,YAChCC,EAAiBC,KAAKC,MAAMtB,GAE9BoB,GACFtC,KAAKV,SAAS,CAAE4B,SAAUoB,M,gCAI9B,SAAmBG,EAAWX,GACxB9B,KAAKjB,MAAMmC,WAAaY,EAAUZ,UAEpCkB,aAAaM,QAAQ,WAAYH,KAAKI,UAAU3C,KAAKjB,MAAMmC,WAE7D0B,QAAQC,IAAIf,GACZc,QAAQC,IAAI7C,KAAKjB,S,oBAGnB,WACE,IAAQY,EAA+DK,KAA/DL,cAAe6B,EAAgDxB,KAAhDwB,aAAcO,EAAkC/B,KAAlC+B,eAAgBT,EAAkBtB,KAAlBsB,cAErD,OACE,sBAAKrB,UAAU,MAAf,UACE,2CACA,cAAC,EAAD,CAAMN,cAAeA,IACrB,0CACA,cAAC,EAAD,CAAQN,MAAOW,KAAKjB,MAAM2C,OAAQF,aAAcA,IAChD,cAAC,EAAD,CACEN,SAAUa,IACVT,cAAeA,W,GAnEPP,aA0EHU,ICrEAqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAlE,EAAOC,QAAU,CAAC,KAAO,0BAA0B,WAAa,gCAAgC,OAAS,8B,kBCAzGD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,yB","file":"static/js/main.a81cae77.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__WUpef\",\"button\":\"Form_button__3kzV1\",\"label\":\"Form_label__1e26M\",\"input\":\"Form_input__1pNQ7\"};","import { Component } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport s from \"../Forms/Form.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    // console.log(e.target.name,e.target.value);\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n\r\n    const obj = {\r\n      name,\r\n      number,\r\n    };\r\n\r\n    this.props.addNewContact(obj);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  prodIdName = uuidv4();\r\n  prodIdNumber = uuidv4();\r\n\r\n  render() {\r\n    const { handleSubmit, prodIdName, handleChange, prodIdNumber } = this;\r\n    const { name, number } = this.state;\r\n    return (\r\n      <div>\r\n        <form className={s.form} onSubmit={handleSubmit}>\r\n          <label className={s.label} htmlFor={prodIdName}>\r\n            {\" \"}\r\n            Name\r\n          </label>\r\n          <input\r\n            className={s.input}\r\n            id={prodIdName}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <label className={s.label} htmlFor={prodIdNumber}>\r\n            Number\r\n          </label>\r\n          <input\r\n            className={s.input}\r\n            id={prodIdNumber}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <button className={s.button} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nForm.propTypes = {\r\n  handleSubmit: PropTypes.func,\r\n  handleChange: PropTypes.func,\r\n  name: PropTypes.string,\r\n  number: PropTypes.number,\r\n};\r\n","import { Component } from \"react\";\r\nimport s from \"../Contacts/ContactList.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class ContactList extends Component {\r\n  render() {\r\n    return (\r\n      <ul className={s.list}>\r\n        {this.props.contacts.map(({ id, name, number }) => (\r\n          <li className={s.list__item} key={id}>\r\n            {name} : {number}\r\n            <button\r\n              className={s.button}\r\n              onClick={this.props.removeContact}\r\n              type=\"button\"\r\n              id={id}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  removeContact: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport s from \"../Filter/Filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ value, changeFilter }) => (\r\n  <>\r\n    <label className={s.label}>Find contacts by name</label>\r\n    <input\r\n      className={s.input}\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={changeFilter}\r\n    ></input>\r\n  </>\r\n);\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  changeFilter: PropTypes.func,\r\n};\r\n","import { Component } from \"react\";\nimport \"./App.css\";\nimport { Form } from \"./components/Forms/Form\";\nimport { ContactList } from \"./components/Contacts/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addNewContact = ({ name, number }) => {\n    if (!this.state.contacts.find((contact) => contact.name === name)) {\n      this.setState((prevState) => ({\n        contacts: [...prevState.contacts, { name, number, id: uuidv4() }],\n      }));\n    } else {\n      alert(`${name} is already in contacts`);\n    }\n  };\n\n  renderContacts = () => {\n    const { filter, contacts } = this.state;\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  removeContact = (e) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((elem) => elem.id !== e.target.id),\n    }));\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      // console.log('обновилось');\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n    console.log(prevState);\n    console.log(this.state);\n  }\n\n  render() {\n    const { addNewContact, changeFilter, renderContacts, removeContact } = this;\n    //console.log(this.state.name, this.state.number);\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <Form addNewContact={addNewContact} />\n        <h2>Contacts</h2>\n        <Filter value={this.state.filter} changeFilter={changeFilter} />\n        <ContactList\n          contacts={renderContacts()}\n          removeContact={removeContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1uFkM\",\"list__item\":\"ContactList_list__item__leprD\",\"button\":\"ContactList_button__1ivuz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1X7mP\",\"input\":\"Filter_input__1zbyl\"};"],"sourceRoot":""}